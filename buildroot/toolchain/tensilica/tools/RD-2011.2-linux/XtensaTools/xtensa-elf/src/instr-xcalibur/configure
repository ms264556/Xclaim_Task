#!/bin/sh
# Set up build directories and makefiles for Xcalibur build

# Copyright (C) 2002-2008 Tensilica, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement 
# or the like.  Any license provided herein, whether implied or 
# otherwise, applies only to this software file.  Patent licenses, if 
# any, provided herein do not apply to combinations of this program with 
# other software, or any other product whatsoever.  
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write the Free Software Foundation, Inc., 59
# Temple Place - Suite 330, Boston MA 02111-1307, USA.

BUILD_AREA=`pwd`
BUILD_TOT=`dirname $0`
cd $BUILD_TOT; BUILD_TOT=`pwd`; cd $BUILD_AREA

# options
prefix=/usr/xtensa
dodebug=0
clibrary=newlib

# parse command line
prevopt=
for option
do

  # If the previous option needs an argument, assign it.
  if test -n "$prevopt"; then
    eval "$prevopt=\$option"
    prevopt=
    continue
  fi

  case "$option" in
  -*=*) optarg=`echo "$option" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case "$option" in

  -enable-debug | --enable-debug)
    dodebug=1 ;;

  -help | --help | --hel | --he | --h)
    cat <<EOF
Usage: configure [options]
Options:
  --prefix=PREFIX         install files in PREFIX directory
  --enable-debug          build with debugging enabled
EOF
    exit 0 ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    prevopt=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix="$optarg" ;;
  --enable-uclibc)
    clibrary=uclibc ;;

  *)
    # ignore other options
    ;;

  esac
done

if test -n "$prevopt"; then
  { echo "configure: error: missing argument to --$prevopt" 1>&2; exit 1; }
fi

# Produce a "config.status" file to record the options
HOST=`hostname`
cat > $BUILD_AREA/config.status <<-EOF
	#! /bin/sh
	# Generated automatically by configure.
	# Run this file to recreate the current configuration.
	# This directory was configured as follows:
	#
	export STDTOOLS; STDTOOLS=$STDTOOLS
	export XTTOOLS; XTTOOLS=$XTTOOLS
	export XTENSA_SYSTEM; XTENSA_SYSTEM=$XTENSA_SYSTEM
	export XTENSA_CORE; XTENSA_CORE=$XTENSA_CORE
	export PATH; PATH=$PATH
	$BUILD_TOT/configure $*
EOF
chmod ugo+x $BUILD_AREA/config.status

# Figure out the host platform
os=`/bin/uname -s`
case "$os" in
  SunOS)
	BUILD_OS=SOLARIS ;;
  Linux)
	BUILD_OS=LINUX ;;
  CYGWIN*)
	BUILD_OS=CYGWIN ;;
  *)
	echo "Operating system '$os' is not supported"
	exit 1 ;;
esac

# BUILD_OPTIMIZE may be: DEFAULT, DEBUG, NODEBUG or CFLAGS
if [ $dodebug != 0 ]; then
  BUILD_OPTIMIZE=DEBUG
elif [ "X$CFLAGS" = "X" ]; then
  BUILD_OPTIMIZE=DEFAULT
else
  BUILD_OPTIMIZE=$CFLAGS
fi

makefiles='Makefile'
for mkfile in $makefiles; do

  blddir=$BUILD_AREA/`dirname $mkfile`
  mkdir -p $blddir

  cat > $blddir/Makefile <<-EOF

	PATH           = $XTTOOLS/bin:$PATH
	PREFIX         = $prefix
	XTTOOLS        = $XTTOOLS
	XTENSA_SRC_DIR = $BUILD_TOT/../..
	STDTOOLS       = $STDTOOLS
	BUILD_AREA     = $BUILD_AREA
	BUILD_TOT      = $BUILD_TOT
	BUILD_ARCH     = XTENSA
	BUILD_TYPE     = NONSHARED
	BUILD_OPTIMIZE = $BUILD_OPTIMIZE
	BUILD_VARIANT  = DEFAULT
	BUILD_INSTALL  = DEFAULT
	BUILD_TARGET   = XTENSA
	BUILD_CC       = xt-xcc -compat-v7
	BUILD_CXX      = xt-xc++ -compat-v7
	BUILD_OS       = XTENSA
	BUILD_CLIB     = $clibrary
	 
	export XTENSA_SYSTEM = $XTENSA_SYSTEM
	export XTENSA_CORE = $XTENSA_CORE

	#  Include (optional) parameter override file
	-include \$(BUILD_AREA)/Makefile.override

	#  Include (optional) parameter override file from source area
	-include \$(BUILD_TOT)/Makefile.override

	#  Include Makefile.gbase
	include \$(BUILD_TOT)/Makefile.gbase
EOF

done
