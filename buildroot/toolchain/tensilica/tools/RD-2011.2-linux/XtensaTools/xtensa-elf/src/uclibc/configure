#!/bin/sh
# Set up build directories and makefiles for uClibc build

# Copyright (C) 2004-2008 Tensilica, Inc.  All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU Library General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more
# details.
#
# You should have received a copy of the GNU Library General Public License
# along with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

BUILD_AREA=`pwd`
BUILD_TOT=`dirname $0`
cd $BUILD_TOT; BUILD_TOT=`pwd`; cd $BUILD_AREA

ARGS=$*

# parse command line
prevopt=
for option
do

  # If the previous option needs an argument, assign it.
  if test -n "$prevopt"; then
    eval "$prevopt=\$option"
    prevopt=
    continue
  fi

  case "$option" in
  -*=*) optarg=`echo "$option" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case "$option" in

  -help | --help | --hel | --he | --h)
    cat <<EOF
Usage: configure [options]
Options:
  --prefix=PREFIX         install files in PREFIX directory
EOF
    exit 0 ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    prevopt=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix="$optarg" ;;

  *)
    # ignore other options
    ;;

  esac
done

if test -n "$prevopt"; then
  { echo "configure: error: missing argument to --$prevopt" 1>&2; exit 1; }
fi

# Produce a "config.status" file to record the options
cat > $BUILD_AREA/config.status <<-EOF
	#! /bin/sh
	# Generated automatically by configure.
	# Run this file to recreate the current configuration.
	# This directory was configured as follows:
	#
	export PATH; PATH=$PATH
	export XTENSA_CC_FOR_TARGET; XTENSA_CC_FOR_TARGET=$XTENSA_CC_FOR_TARGET
	$BUILD_TOT/configure $*
EOF
chmod ugo+x $BUILD_AREA/config.status

cat > $BUILD_AREA/Rules.mak <<-EOF
	include $BUILD_TOT/Rules.mak
EOF

makefiles=`cd $BUILD_TOT; find . -name Makefile -print`
for mkfile in $makefiles; do

  blddir=$BUILD_AREA/`dirname $mkfile`
  mkdir -p $blddir
  srcdir=$BUILD_TOT/`dirname $mkfile`
  cat > $blddir/Makefile <<-EOF
	CROSS=xt-
	CC=$XTENSA_CC_FOR_TARGET
	TOPDIR=$BUILD_TOT/
	BUILDDIR=$BUILD_AREA/
	VPATH=$srcdir
	include $srcdir/Makefile
EOF
done

echo "#include <xtensa/config/system.h>" > $BUILD_AREA/checkconfig.c
echo "#if XSHAL_USE_FLOATING_POINT" >> $BUILD_AREA/checkconfig.c
echo "y" >> $BUILD_AREA/checkconfig.c
echo "#else" >> $BUILD_AREA/checkconfig.c
echo "n" >> $BUILD_AREA/checkconfig.c
echo "#endif" >> $BUILD_AREA/checkconfig.c
$XTENSA_CC_FOR_TARGET -E $BUILD_AREA/checkconfig.c | tail -1 > $BUILD_AREA/.hasfloats
echo "checkconfig DONE"

mkdir -p lib
mkdir -p include
mkdir -p include/bits
mkdir -p include/sys
cp -f $BUILD_TOT/libc/sysdeps/libgloss/xtensa/bits/xtensa.config .config
cp -f $BUILD_TOT/libc/sysdeps/libgloss/xtensa/bits/xtensa_config.h include/bits/uClibc_config.h
touch include/bits/uClibc_config.h
cp -rf $BUILD_TOT/include/* include/

mkdir -p libgloss
echo configuring in libgloss
echo running $BUILD_TOT/libgloss/configure $ARGS
(cd libgloss && $BUILD_TOT/libgloss/configure $ARGS)
