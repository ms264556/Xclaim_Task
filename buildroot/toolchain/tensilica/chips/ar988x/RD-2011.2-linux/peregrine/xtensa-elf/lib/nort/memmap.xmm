//  Memory map file to generate linker scripts for an LSP without any default runtime.

// $Id: //depot/rel/Cottonwood/Xtensa/SWConfig/ldscripts/nort.parm#1 $

// Customer ID=8327; Build=0x3b95c; Copyright (c) 2004-2007 by Tensilica Inc.  ALL RIGHTS RESERVED.
// These coded instructions, statements, and computer programs are the
// copyrighted works and confidential proprietary information of Tensilica Inc.
// They may not be modified, copied, reproduced, distributed, or disclosed to
// third parties in any manner, medium, or form, in whole or in part, without
// the prior written consent of Tensilica Inc.

//  Show more details if configuration targets the XT2000 board:
INCLUDE_XT2000_MEMORIES = try


// A memory map is a sequence of memory descriptions and
// optional parameter assignments.
//
// Each memory description has the following format:
//   BEGIN <name>
//     <addr> [,<paddr>] : <mem-type> : <mem-name> : <size> [,<psize>]
//                       : [writable] [,executable] [,device] ;
//     <segment>*
//   END <name>
//
// where each <segment> description has the following format:
//     <seg-name> : F|C : <start-addr> - <end-addr> [ : STACK ] [ : HEAP ]
//                : <section-name>* ;
//
// Each parameter assignment is a keyword/value pair in the following format:
//   <keyword> = <value>                (no spaces in <value>)
// or
//   <keyword> = "<value>"              (spaces allowed in <value>)
//
// The following primitive is also defined:
//   PLACE SECTIONS( <section-name>* ) { WITH_SECTION(<section-name>)
//                                       | IN_SEGMENT(<seg-name>) }
//
// Please refer to the Xtensa LSP Reference Manual for more details.
//
BEGIN dram0
0x400000: dataRam : dram0 : 0x40000 : writable ;
 dram0_0 : C : 0x400000 - 0x43ffff : .dram0.rodata .dram0.literal .dram0.data .dram0.bss;
END dram0

BEGIN dram1
0x440000: dataRam : dram1 : 0x40000 : writable ;
 dram1_0 : C : 0x440000 - 0x47ffff : .dram1.rodata .dram1.literal .dram1.data .dram1.bss;
END dram1

BEGIN iram0
0x900000: instRam : iram0 : 0x80000 : executable, writable ;
 iram0_0 : C : 0x900000 - 0x97efaf : .iram0.literal .iram0.text;
 iram0_1 : C : 0x97efb0 - 0x97efff : .ResetVector.literal;
 iram0_2 : F : 0x97f000 - 0x97f2df : .ResetVector.text;
 iram0_3 : C : 0x97f2e0 - 0x97f57b : .Level2InterruptVector.literal;
 iram0_4 : F : 0x97f57c - 0x97f597 : .Level2InterruptVector.text;
 iram0_5 : C : 0x97f598 - 0x97f59b : .Level3InterruptVector.literal;
 iram0_6 : F : 0x97f59c - 0x97f5b7 : .Level3InterruptVector.text;
 iram0_7 : C : 0x97f5b8 - 0x97f5bb : .Level4InterruptVector.literal;
 iram0_8 : F : 0x97f5bc - 0x97f5d7 : .Level4InterruptVector.text;
 iram0_9 : C : 0x97f5d8 - 0x97f5db : .DebugExceptionVector.literal;
 iram0_10 : F : 0x97f5dc - 0x97f5f7 : .DebugExceptionVector.text;
 iram0_11 : C : 0x97f5f8 - 0x97f5fb : .KernelExceptionVector.literal;
 iram0_12 : F : 0x97f5fc - 0x97f617 : .KernelExceptionVector.text;
 iram0_13 : C : 0x97f618 - 0x97f61b : .UserExceptionVector.literal;
 iram0_14 : F : 0x97f61c - 0x97f637 : .UserExceptionVector.text;
 iram0_15 : C : 0x97f638 - 0x97f63b : .DoubleExceptionVector.literal;
 iram0_16 : F : 0x97f63c - 0x97f7bb : .DoubleExceptionVector.text;
 iram0_17 : C : 0x97f7bc - 0x97f7ff : ;
 iram0_18 : F : 0x97f800 - 0x97f97f : .WindowVectors.text;
 iram0_19 : C : 0x97f980 - 0x97ffff : ;
END iram0

BEGIN iram1
0x980000: instRam : iram1 : 0x80000 : executable, writable ;
 iram1_0 : C : 0x980000 - 0x9fffff : .iram1.literal .iram1.text;
END iram1

BEGIN srom
0x40000000: sysrom : srom : 0x20000 : executable ;
 srom0 : C : 0x40000000 - 0x4001ffff : .srom.rodata .srom.literal .srom.text .rom.store;
END srom

BEGIN sram
0x60000000: sysram : sram : 0x400000 : executable, writable ;
 sram0 : C : 0x60000000 - 0x603fffff :  STACK :  HEAP : .sram.rodata .rodata .lit4 .sram.literal .literal .sram.text .text .sram.data .data .sram.bss .bss;
END sram

BEGIN iocached
0x70000000: io : iocached : 0xda00000 : executable, writable ;
END iocached

BEGIN rambypass
0x80000000: sysram : rambypass : 0x10000000 : device, executable, writable ;
END rambypass

BEGIN iobypass
0x90000000: io : iobypass : 0xda00000 : device, executable, writable ;
END iobypass

