#// Customer ID=8327; Build=0x3b95c; Copyright (c) 2007-2008 by Tensilica Inc.  ALL RIGHTS RESERVED.
#// These coded instructions, statements, and computer programs are the
#// copyrighted works and confidential proprietary information of
#// Tensilica Inc.  They may be adapted and modified by bona fide
#// purchasers for internal use, but neither the original nor any adapted
#// or modified version may be disclosed or distributed to third parties
#// in any manner, medium, or form, in whole or in part, without the prior
#// written consent of Tensilica Inc.


system "sys"
(
  properties
  (
    type = "System";
    version = "1.0";
    variant = "";
    loadfile_extension = "";
    description = "";
    onecyclevalue = "1.0";
    onecycletime = "ns";
    simulationresolution = "1 ps";
    simulationdefaulttime = "1 ns";
  )
  parameters ()
  components
  (

    instance "master"
    (
      model   = "xtsc_master_sd";
      version = "";
      variant = "";

      parameters
      (
        "script_file" = "../../pif2sb_bridge/master.vec";
      )

    )

    instance "bridge"
    (
      model   = "xtsc_pif2ahb_bridge_sd";
      version = "";
      variant = "";

      parameters
      (
        "ahb_byte_width" = "4";
        "big_endian" = "false";
        "pif_byte_width" = "4";
      )

    )

    instance "ahb"
    (
      model   = "MxAHB1";
      version = "";
      variant = "";

      parameters
      (
        "Data Width" = "32";
      )

    )

    instance "mem"
    (
      model   = "xtsc_ahb_memory_sd";
      version = "";
      variant = "";

      parameters
      (
        "big_endian" = "false";
        "byte_width" = "4";
      )

    )

  )
  connections
  (
    "master::m_request_port<-->bridge::m_pif_request_export" = "master":"m_request_port" to "bridge":"m_pif_request_export";
    "bridge::m_pif_respond_port<-->master::m_respond_export" = "bridge":"m_pif_respond_port" to "master":"m_respond_export";
    "bridge::m_ahb_master_port<-->ahb::bslave0" = "bridge":"m_ahb_master_port" to "ahb":"bslave0";
    "ahb::bmaster<-->mem::m_p_ahb_slave_port" = "ahb":"bmaster" to "mem":"m_p_ahb_slave_port";
  )
  portmaps ()
)
